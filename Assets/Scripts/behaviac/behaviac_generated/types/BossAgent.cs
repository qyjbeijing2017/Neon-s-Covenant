// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

///<<< BEGIN WRITING YOUR CODE FILE_INIT
using UnityEngine;
///<<< END WRITING YOUR CODE

public class BossAgent : AgentBase
///<<< BEGIN WRITING YOUR CODE BossAgent
///<<< END WRITING YOUR CODE
{
	private bool bActivated = false;
	public void _set_bActivated(bool value)
	{
		bActivated = value;
	}
	public bool _get_bActivated()
	{
		return bActivated;
	}

	private bool isActing = false;
	public void _set_isActing(bool value)
	{
		isActing = value;
	}
	public bool _get_isActing()
	{
		return isActing;
	}

	private bool isAttacking = false;
	public void _set_isAttacking(bool value)
	{
		isAttacking = value;
	}
	public bool _get_isAttacking()
	{
		return isAttacking;
	}

	private bool isAttackingNear = false;
	public void _set_isAttackingNear(bool value)
	{
		isAttackingNear = value;
	}
	public bool _get_isAttackingNear()
	{
		return isAttackingNear;
	}

	private bool isChasing = false;
	public void _set_isChasing(bool value)
	{
		isChasing = value;
	}
	public bool _get_isChasing()
	{
		return isChasing;
	}

	private bool isLooking = false;
	public void _set_isLooking(bool value)
	{
		isLooking = value;
	}
	public bool _get_isLooking()
	{
		return isLooking;
	}

	private bool isWeak = false;
	public void _set_isWeak(bool value)
	{
		isWeak = value;
	}
	public bool _get_isWeak()
	{
		return isWeak;
	}

	private int State = 0;
	public void _set_State(int value)
	{
		State = value;
	}
	public int _get_State()
	{
		return State;
	}

	private float timeToDecide = 3f;
	public void _set_timeToDecide(float value)
	{
		timeToDecide = value;
	}
	public float _get_timeToDecide()
	{
		return timeToDecide;
	}

	private float weakCD = 0f;
	public void _set_weakCD(float value)
	{
		weakCD = value;
	}
	public float _get_weakCD()
	{
		return weakCD;
	}

	public void AttackNear1()
	{
///<<< BEGIN WRITING YOUR CODE AttackNear1
///<<< END WRITING YOUR CODE
	}

	public void BossEnable()
	{
///<<< BEGIN WRITING YOUR CODE BossEnable
///<<< END WRITING YOUR CODE
	}

	public bool IsNearCharacter()
	{
///<<< BEGIN WRITING YOUR CODE IsNearCharacter
		return false;
///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE CLASS_PART
	private static string ExportedFilePath
	{
		get
		{
			string relativePath = "/Resources/behaviac";

			if (Application.platform == RuntimePlatform.WindowsEditor)
			{
				return Application.dataPath + relativePath;
			}
			else if (Application.platform == RuntimePlatform.WindowsPlayer)
			{
				return Application.dataPath + relativePath;
			}
			else
			{
				return "Assets" + relativePath;
			}
		}
	}

	private bool InitBehavic()
	{
		behaviac.Debug.LogWarning("InitBehavic");

		behaviac.Workspace.Instance.FilePath = ExportedFilePath;
		behaviac.Workspace.Instance.FileFormat = behaviac.Workspace.EFileFormat.EFF_cs;

		return true;
	}
	private bool InitPlayer()
	{
		behaviac.Debug.LogWarning("InitPlayer");

		bool bRet = this.btload("FirstBT");
		if (bRet)
		{
			this.btsetcurrent("FirstBT");
		}

		return bRet;
	}
	void Awake()
	{
		behaviour = GetComponent<BossBehaviour>();
		InitBehavic();

		InitPlayer();
	}
	behaviac.EBTStatus _status = behaviac.EBTStatus.BT_RUNNING;

	void Update()
	{
		if (_status == behaviac.EBTStatus.BT_RUNNING)
		{
			behaviac.Debug.LogWarning("Update");

			_status = this.btexec();
		}
	}
	///<<< END WRITING YOUR CODE

}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE

